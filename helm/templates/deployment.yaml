apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "golang-example.fullname" . }}
  labels:
    {{- include "golang-example.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }} 
  selector:
    matchLabels:
      {{- include "golang-example.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "golang-example.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["/app/main","-f","/app/config/config.yaml"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts: 
          - name: cert-volume
            mountPath: "/app/certs"
            readOnly: true
          - name: config-volume
            mountPath: "/app/config"
            readOnly: true
      volumes: 
      - name: cert-volume
        secret:
          secretName: {{ .Values.ssl.secret}}
          optional: false
      - name: config-volume
        configMap:
          name: config-golang-example